alpha_theta_rep <- array(NaN,M,1)
beta_theta_rep <- array(NaN,M,1)
alpha_gamma_rep <- array(NaN,M,1)
beta_gamma_rep <- array(NaN,M,1)
theta_rep <- matrix(NaN,n,M)
gamma_rep <- matrix(NaN,n,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
theta_sim <- rgamma(1, alpha_d_sim + alpha_theta_sim, d + beta_theta_sim)
gamma_sim <- bayesmpp_gamma_sim(x0, alpha_gamma_sim, beta_gamma_sim)
alpha_d_rep[m,1] <- alpha_d_sim
alpha_theta_rep[m,1] <- alpha_theta_sim
beta_theta_rep[m,1] <- beta_theta_sim
alpha_gamma_rep[m,1] <- alpha_gamma_sim
beta_gamma_rep[m,1] <- beta_gamma_sim
theta_rep[n,m] <- theta_sim
gamma_rep[n,m] <- gamma_sim
}
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
bayesmpp <- function(...,datos, M){
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-1000
n<-50
alpha_d_rep <- array(NaN,M,1)
alpha_theta_rep <- array(NaN,M,1)
beta_theta_rep <- array(NaN,M,1)
alpha_gamma_rep <- array(NaN,M,1)
beta_gamma_rep <- array(NaN,M,1)
theta_rep <- matrix(NaN,n,M)
gamma_rep <- matrix(NaN,n,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
theta_sim <- rgamma(1, alpha_d_sim + alpha_theta_sim, d + beta_theta_sim)
gamma_sim <- bayesmpp_gamma_sim(x0, alpha_gamma_sim, beta_gamma_sim)
alpha_d_rep[m,1] <- alpha_d_sim
alpha_theta_rep[m,1] <- alpha_theta_sim
beta_theta_rep[m,1] <- beta_theta_sim
alpha_gamma_rep[m,1] <- alpha_gamma_sim
beta_gamma_rep[m,1] <- beta_gamma_sim
theta_rep[n,m] <- theta_sim
gamma_rep[n,m] <- gamma_sim
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
M<-1000
n<-50
alpha_theta_rep <- array(NaN,M,1)
alpha_theta_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
alpha_theta_rep[m,1] <- alpha_theta_sim
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
M<-1000
n<-50
alpha_theta_rep <- array(NaN,M,1)
alpha_theta_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
alpha_theta_rep[m,1] <- alpha_theta_sim
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
M<-1000
n<-50
alpha_theta_rep <- array(NaN,M,1)
alpha_theta_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
alpha_theta_rep[m,1] <- alpha_theta_sim
}
rm(list=ls()
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
M<-1000
alpha_theta_rep <- array(NaN,M,1)
alpha_theta_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
alpha_theta_rep[m,1] <- alpha_theta_sim
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
M<-1000
alpha_theta_rep <- array(NaN,M)
alpha_theta_sim <- 1 # (o cualquiera)
m <- 1
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
alpha_theta_rep[m] <- alpha_theta_sim
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
M<-1000
alpha_theta_rep <- array(NaN,M)
alpha_theta_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
alpha_theta_rep[m] <- alpha_theta_sim
}
alpha_theta_rep
hist(alpha_theta_rep)
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
M<-1000
alpha_d_rep <- array(NaN,M)
alpha_d_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_d_rep[m] <- alpha_d_sim
}
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
M<-1000
alpha_d_rep <- array(NaN,M)
alpha_d_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_d_rep[m] <- alpha_d_sim
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
M<-1000
alpha_d_rep <- array(NaN,M)
alpha_d_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_d_rep[m] <- alpha_d_sim
}
alpha_d_rep
hist(alpha_d_rep)
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
M<-10000
beta_theta_rep <- array(NaN,M)
beta_theta_sim <- 1
m <- 1
for(m in 1:M){
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
beta_theta_rep[m] <- beta_theta_sim
}
beta_theta_rep
hist(beta_theta_rep)
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-10000
n<-50
alpha_d_rep <- array(NaN,M)
alpha_theta_rep <- array(NaN,M)
beta_theta_rep <- array(NaN,M)
alpha_gamma_rep <- array(NaN,M)
beta_gamma_rep <- array(NaN,M)
theta_rep <- matrix(NaN,n,M)
gamma_rep <- matrix(NaN,n,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
theta_sim <- rgamma(1, alpha_d_sim + alpha_theta_sim, d + beta_theta_sim)
gamma_sim <- bayesmpp_gamma_sim(x0, alpha_gamma_sim, beta_gamma_sim)
alpha_d_rep[m] <- alpha_d_sim
alpha_theta_rep[m] <- alpha_theta_sim
beta_theta_rep[m] <- beta_theta_sim
alpha_gamma_rep[m] <- alpha_gamma_sim
beta_gamma_rep[m] <- beta_gamma_sim
theta_rep[n,m] <- theta_sim
gamma_rep[n,m] <- gamma_sim
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
M<-1000000
alpha_d_rep <- array(NaN,M)
alpha_d_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_d_rep[m] <- alpha_d_sim
}
rm(list=ls())
M<-100
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
alpha_d_rep <- array(NaN,M)
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
M<-100
alpha_d_rep <- array(NaN,M)
alpha_d_sim <- 1 # (o cualquiera)
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_d_rep[m] <- alpha_d_sim
}
bayesmpp_alpha_d()
alpha_d_rep
hist(alpha_d_rep)
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-100
n<-10
alpha_d_rep <- array(NaN,M)
alpha_theta_rep <- array(NaN,M)
beta_theta_rep <- array(NaN,M)
alpha_gamma_rep <- array(NaN,M)
beta_gamma_rep <- array(NaN,M)
theta_rep <- matrix(NaN,n,M)
gamma_rep <- matrix(NaN,n,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
theta_sim <- rgamma(1, alpha_d_sim + alpha_theta_sim, d + beta_theta_sim)
gamma_sim <- bayesmpp_gamma_sim(x0, alpha_gamma_sim, beta_gamma_sim)
alpha_d_rep[m] <- alpha_d_sim
alpha_theta_rep[m] <- alpha_theta_sim
beta_theta_rep[m] <- beta_theta_sim
alpha_gamma_rep[m] <- alpha_gamma_sim
beta_gamma_rep[m] <- beta_gamma_sim
theta_rep[n,m] <- theta_sim
gamma_rep[n,m] <- gamma_sim
}
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-100
n<-10
alpha_0 =2
beta_0 = 0.3
alpha_d_rep <- array(NaN,M)
alpha_theta_rep <- array(NaN,M)
beta_theta_rep <- array(NaN,M)
alpha_gamma_rep <- array(NaN,M)
beta_gamma_rep <- array(NaN,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
alpha_d_rep[m] <- alpha_d_sim
alpha_theta_rep[m] <- alpha_theta_sim
beta_theta_rep[m] <- beta_theta_sim
alpha_gamma_rep[m] <- alpha_gamma_sim
beta_gamma_rep[m] <- beta_gamma_sim
}
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-100
n<-10
alpha_0 =2
beta_0 = 0.3
alpha_d_rep <- array(NaN,M)
alpha_theta_rep <- array(NaN,M)
beta_theta_rep <- array(NaN,M)
alpha_gamma_rep <- array(NaN,M)
beta_gamma_rep <- array(NaN,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
alpha_d_rep[m] <- alpha_d_sim
alpha_theta_rep[m] <- alpha_theta_sim
beta_theta_rep[m] <- beta_theta_sim
alpha_gamma_rep[m] <- alpha_gamma_sim
beta_gamma_rep[m] <- beta_gamma_sim
}
list(alpha_d_rep,alpha_theta_rep,beta_theta_rep,alpha_gamma_rep,beta_gamma_rep)
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-1000
n<-100
alpha_0 =2
beta_0 = 0.3
alpha_d_rep <- array(NaN,M)
alpha_theta_rep <- array(NaN,M)
beta_theta_rep <- array(NaN,M)
alpha_gamma_rep <- array(NaN,M)
beta_gamma_rep <- array(NaN,M)
theta_rep <- matrix(NaN,n,M)
gamma_rep <- matrix(NaN,n,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
theta_sim <- rgamma(1, alpha_d_sim + alpha_theta_sim, d + beta_theta_sim)
gamma_sim <- bayesmpp_gamma_sim(x0, alpha_gamma_sim, beta_gamma_sim)
alpha_d_rep[m] <- alpha_d_sim
alpha_theta_rep[m] <- alpha_theta_sim
beta_theta_rep[m] <- beta_theta_sim
alpha_gamma_rep[m] <- alpha_gamma_sim
beta_gamma_rep[m] <- beta_gamma_sim
theta_rep[n,m] <- theta_sim
gamma_rep[n,m] <- gamma_sim
}
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-1000
n<-10
d<-5
alpha_0 =2
beta_0 = 0.3
alpha_d_rep <- array(NaN,M)
alpha_theta_rep <- array(NaN,M)
beta_theta_rep <- array(NaN,M)
alpha_gamma_rep <- array(NaN,M)
beta_gamma_rep <- array(NaN,M)
theta_rep <- matrix(NaN,n,M)
gamma_rep <- matrix(NaN,n,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
theta_sim <- rgamma(1, alpha_d_sim + alpha_theta_sim, d + beta_theta_sim)
gamma_sim <- bayesmpp_gamma_sim(x0, alpha_gamma_sim, beta_gamma_sim)
alpha_d_rep[m] <- alpha_d_sim
alpha_theta_rep[m] <- alpha_theta_sim
beta_theta_rep[m] <- beta_theta_sim
alpha_gamma_rep[m] <- alpha_gamma_sim
beta_gamma_rep[m] <- beta_gamma_sim
theta_rep[n,m] <- theta_sim
gamma_rep[n,m] <- gamma_sim
}
rm(list = ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_d_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_beta_theta_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_alpha_gamma_demo.R")
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/bayesmpp_gamma.R")
M<-1000
n<-100
d<-5
alpha_0 =2
beta_0 = 0.3
alpha_d_rep <- array(NaN,M)
alpha_theta_rep <- array(NaN,M)
beta_theta_rep <- array(NaN,M)
alpha_gamma_rep <- array(NaN,M)
beta_gamma_rep <- array(NaN,M)
theta_rep <- matrix(NaN,n,M)
gamma_rep <- matrix(NaN,n,M)
alpha_d_sim <- 1 # (o cualquiera)
alpha_theta_sim <- 1 # (o cualquiera)
beta_theta_sim <- 1
alpha_gamma_sim <- 1
beta_gamma_sim <- 1
theta_sim <- 1
gamma_sim <- 1
m <- 1
for(m in 1:M){
alpha_d_sim <- bayesmpp_alpha_d(x0)
alpha_theta_sim <- bayesmpp_alpha_theta(x0, alpha_d_sim)
beta_theta_sim <- bayesmpp_beta_theta(x0, alpha_d_sim, alpha_theta_sim)
alpha_gamma_sim <- bayesmpp_alpha_gamma(x0)
beta_gamma_sim <- rgamma(1, alpha_0,(1/gamma_sim)+beta_0)
theta_sim <- rgamma(1, alpha_d_sim + alpha_theta_sim, d + beta_theta_sim)
gamma_sim <- bayesmpp_gamma_(x0, alpha_gamma_sim, beta_gamma_sim)
alpha_d_rep[m] <- alpha_d_sim
alpha_theta_rep[m] <- alpha_theta_sim
beta_theta_rep[m] <- beta_theta_sim
alpha_gamma_rep[m] <- alpha_gamma_sim
beta_gamma_rep[m] <- beta_gamma_sim
theta_rep[n,m] <- theta_sim
gamma_rep[n,m] <- gamma_sim
}
bayesmpp_out <- list(alpha_d_rep,alpha_theta_rep,beta_theta_rep,alpha_gamma_rep,beta_gamma_rep,theta_rep,gamma_rep)
return(bayesmpp_out)
bayesmpp_out <- list(alpha_d_rep,alpha_theta_rep,beta_theta_rep,alpha_gamma_rep,beta_gamma_rep,theta_rep,gamma_rep)
bayesmpp_out
theta_rep
gamma_rep
beta_gamma_rep
