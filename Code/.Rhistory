rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
alpha_d <- 1
alpha_theta <- 2
d <- 5
beta_theta <- 1
theta <- 3
alpha_0 = 2
beta_0 = 0.3
alpha_d_sim = 2
g<-function(alpha_d=1,alpha_theta=2, d=5,beta_theta=1, theta=3, alpha_0=2,beta_0=0.3){
g <- (alpha_d+ alpha_theta)*log(d+beta_theta)-log(gamma(alpha_d+ alpha_theta))+alpha_d*(log(theta))+(alpha_0-1)*log(alpha_d)-(alpha_d*beta_0)
}
bayesmpp_alpha_d <- function(x0=2){
bad <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bad)
}
alpha_d_sim<-bayesmpp_alpha_d()
alpha_d_sim
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
#Definicion de variables
alpha_d <- 1
alpha_theta <- 2
d <- 5
beta_theta <- 1
theta <- 3
alpha_0 = 2
beta_0 = 0.3
alpha_theta_sim = 2
g<- function(alpha_d=1,alpha_theta=2,d=5,beta_theta=1,theta=3,alpha_0=2,beta_0=0.3){
g<- (alpha_d+alpha_theta)*log(d+beta_theta)-log(gamma(alpha_d+alpha_theta))+alpha_theta*log(theta)+(alpha_0-1)*log(alpha_theta)-alpha_theta*beta_0
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
alpha_d <- 1
alpha_theta <- 2
d <- 5
beta_theta <- 1
theta <- 3
alpha_0 = 2
beta_0 = 0.3
alpha_theta_sim = 2
g<- function(alpha_d=1,alpha_theta=2,d=5,beta_theta=1,theta=3,alpha_0=2,beta_0=0.3){
g<- (alpha_d+alpha_theta)*log(d+beta_theta)-log(gamma(alpha_d+alpha_theta))+alpha_theta*log(theta)+(alpha_0-1)*log(alpha_theta)-alpha_theta*beta_0
}
bayesmpp_alpha_theta <- function(x0=2){
bat <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bat)
}
alpha_theta_sim<-bayesmpp_alpha_theta()
alpha_theta_sim
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
alpha_d <- 1
alpha_theta <- 2
d <- 5
beta_theta <-1
theta <- 3
alpha_0 = 2
beta_0 = 0.3
beta_theta_sim = 3
g<- function(alpha_d=1,alpha_theta=2,d=5,beta_theta=1,theta=3,alpha_0=2,beta_0=0.3){
g<- (alpha_d+alpha_theta)*log(d+beta_theta)+(alpha_0-1)*log(beta_theta)-beta_theta*(theta+beta_0)
}
bayesmpp_beta_theta <- function(x0=1){
bbt <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bbt)
}
beta_theta_sim<-bayesmpp_beta_theta()
beta_theta_sim<-bayesmpp_beta_theta()
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
alpha_d <- 1
alpha_theta <- 2
d <- 5
beta_theta <-1
theta <- 3
alpha_0 = 2
beta_0 = 0.3
beta_theta_sim = 3
g<- function(alpha_d=1,alpha_theta=2,d=5,beta_theta=1,theta=3,alpha_0=2,beta_0=0.3){
g<- (alpha_d+alpha_theta)*log(d+beta_theta)+(alpha_0-1)*log(beta_theta)-beta_theta*(theta+beta_0)
}
bayesmpp_beta_theta <- function(x0=1){
bbt <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bbt)
}
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
alpha_d <- 1
alpha_theta <- 2
d <- 5
beta_theta <-1
theta <- 3
alpha_0 = 2
beta_0 = 0.3
beta_theta_sim = 3
g<- function(alpha_d=1,alpha_theta=2,d=5,beta_theta=1,theta=3,alpha_0=2,beta_0=0.3){
g<- (alpha_d+alpha_theta)*log(d+beta_theta)+(alpha_0-1)*log(beta_theta)-beta_theta*(theta+beta_0)
}
bayesmpp_beta_theta <- function(x0=3){
bbt <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bbt)
}
beta_theta_sim<-bayesmpp_beta_theta()
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
alpha_d <- 1
alpha_theta <- 2
beta_theta <-1
d <- 5
theta <- 3
alpha_0 = 2
beta_0 = 0.3
beta_theta_sim = 1
g<- function(alpha_d=1,alpha_theta=2,d=5,beta_theta=1,theta=3,alpha_0=2,beta_0=0.3){
g<- (alpha_d+alpha_theta)*log(d+beta_theta)+(alpha_0-1)*log(beta_theta)-beta_theta*(theta+beta_0)
}
bayesmpp_beta_theta <- function(x0=1){
bbt <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bbt)
}
beta_theta_sim<-bayesmpp_beta_theta()
g()
g(1)
g<-function(alpha_d=1,alpha_theta=2, d=5,beta_theta=1, theta=3, alpha_0=2,beta_0=0.3){
g <- (alpha_d+ alpha_theta)*log(d+beta_theta)-log(gamma(alpha_d+ alpha_theta))+alpha_d*(log(theta))+(alpha_0-1)*log(alpha_d)-(alpha_d*beta_0)
}
G()
g()
g(1)
g<-function(alpha_d,alpha_theta=2, d=5,beta_theta=1, theta=3, alpha_0=2,beta_0=0.3){
g <- (alpha_d+ alpha_theta)*log(d+beta_theta)-log(gamma(alpha_d+ alpha_theta))+alpha_d*(log(theta))+(alpha_0-1)*log(alpha_d)-(alpha_d*beta_0)
}
g(1)
g<-function(alpha_d,alpha_theta=2, d=5,beta_theta=1, theta=3, alpha_0=2,beta_0=0.3){
(alpha_d+ alpha_theta)*log(d+beta_theta)-log(gamma(alpha_d+ alpha_theta))+alpha_d*(log(theta))+(alpha_0-1)*log(alpha_d)-(alpha_d*beta_0)
}
g(1)
bayesmpp_alpha_d <- function(x0=2){
bad <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bad)
}
bayesmpp_alpha_d()
bayesmpp_alpha_d()
g<- function(alpha_d=1,alpha_theta=2,d=5,beta_theta,theta=3,alpha_0=2,beta_0=0.3){
(alpha_d+alpha_theta)*log(d+beta_theta)+(alpha_0-1)*log(beta_theta)-beta_theta*(theta+beta_0)
}
g(1)
g<- function(beta_theta,alpha_d=1,alpha_theta=2,d=5,theta=3,alpha_0=2,beta_0=0.3){
(alpha_d+alpha_theta)*log(d+beta_theta)+(alpha_0-1)*log(beta_theta)-beta_theta*(theta+beta_0)
}
g(1)
bayesmpp_beta_theta <- function(x0=1){
bbt <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bbt)
}
bayesmpp_beta_theta()
x<-bayesmpp_beta_theta()
x
bayesmpp_beta_theta <- function(x0=3){
bbt <- uni.slice(x0, g, w=1, m=Inf, lower=-Inf, upper=+Inf, gx0=NULL)
return(bbt)
}
bayesmpp_beta_theta()
g<- function(beta_theta,alpha_d=1,alpha_theta=2,d=5,theta=3,alpha_0=2,beta_0=0.3){
(alpha_d+alpha_theta)*log(d+beta_theta)+(alpha_0-1)*log(beta_theta)-beta_theta*(theta+beta_0)
}
bayesmpp_beta_theta <- function(x0=3){
bbt <- uni.slice(x0, g, w=1, m=Inf, lower=0, upper=+Inf, gx0=NULL)
return(bbt)
}
bayesmpp_beta_theta()
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
alpha_gamma <- 2
gamma_ <- 3
alpha_0 = 2
beta_0 = 0.3
alpha_gamma_sim = 2
g<- function(alpha_gamma, gamma_=3,alpha_0=2,beta_0=0.3){
(-alpha_gamma)*log(gamma_)+(alpha_0-1)*log(alpha_gamma)-(alpha_gamma*beta_0)
}
bayesmpp_alpha_gamma <- function(x0=2){
bag <- uni.slice(x0, g, w=1, m=Inf, lower=0, upper=+Inf, gx0=NULL)
return(bag)
}
alpha_gamma_sim<-bayesmpp_alpha_gamma()
alpha_gamma_sim
rm(list=ls())
rm(list=ls())
source("C:/Users/SONY/Documents/GitHub/Tesis_APAS/Code/slice.sampler/uni.slice.R")
g<- function(gamma_, d=5, alpha_gamma_sim=2, beta_gamma_sim=2, c=4){
-(d+alpha_gamma_sim+1)*log(gamma_)-((beta_gamma_sim/gamma_)+(c/gamma_)^d)
}
bayesmpp_gamma_ <- function(x0=2){
bg <- uni.slice(x0, g, w=1, m=Inf, lower=0, upper=+Inf, gx0=NULL)
return(bg)
}
gamma_sim<-bayesmpp_gamma_()
gamma_sim
